/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'


kotlin {
    experimental {
        coroutines 'enable'
    }
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }
    defaultPublishConfig "debug"
}

dependencies {
    // Support libraries

    compile files('libs/classes.jar')

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"

    implementation deps.support.app_compat
    implementation deps.support.v4
    implementation deps.support.design

//    kapt 'com.android.databinding:compiler:3.1.2'

    // Architecture components
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler
    implementation deps.room.runtime
    kapt deps.room.compiler
//    implementation deps.room.rxjava2

    // RxJava
//    implementation deps.rx_android
//    implementation deps.rxjava2
//    implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'

//    implementation 'com.github.nitrico.lastadapter:lastadapter:2.3.0'

    // kotlin
    // Kotlin
    implementation deps.kotlin.stdlib
    implementation 'androidx.core:core-ktx:0.3'
    // Dependencies for local unit tests
//    testImplementation deps.junit
//    testImplementation deps.mockito.all
//    testImplementation deps.hamcrest
//    testImplementation deps.arch_core.testing
//    testImplementation deps.kotlin.stdlib
//    testImplementation deps.kotlin.test
//
//
//
//    // Android Testing Support Library's runner and rules
//    androidTestCompile deps.atsl.runner
//    androidTestCompile deps.atsl.rules
//    androidTestCompile deps.room.testing
//    androidTestCompile deps.arch_core.testing
//
//    // Dependencies for Android unit tests
//    androidTestCompile deps.junit
//    androidTestCompile deps.mockito.core, { exclude group: 'net.bytebuddy' }
//    androidTestCompile deps.dexmaker
//
//    // Espresso UI Testing
//    androidTestCompile deps.espresso.core
//    androidTestCompile deps.espresso.contrib
//    androidTestCompile deps.espresso.intents
//
//    // Resolve conflicts between main and test APK:
//    androidTestCompile deps.support.annotations
//    androidTestCompile deps.support.v4
//    androidTestCompile deps.support.app_compat
//    androidTestCompile deps.support.design

//    assembleDebug {
//        doLast {
//            def fileName = "${project.name}-debug.apk"
//            def fromFile = "./build/outputs/apk/" + fileName
////            def intoFile = "Z:\\android\\out\\target\\product\\t3-p3\\system\\app\\"
//            def intoFile = "./"
//
//            def appName = "D2S-App-Music.apk"
//
//            copy {
//                from fromFile
//                into intoFile
//
//
//                rename {
//                    appName
//                }
//            }
//
//
//            println("=====================build.doLast success.=========================")
//            exec {
//                commandLine "./push.bat"
//            }
//        }
//    }


//    task buildDebug(dependsOn:'assembleDebug') {
//
//        doLast {
//            def fileName = "${project.name}-debug.apk"
//            def fromFile = "./build/outputs/apk/debug/" + fileName
////            def intoFile = "Z:\\android\\out\\target\\product\\t3-p3\\system\\app\\"
//            def intoFile = "./"
//
//            def appName = "D2S-App-Music.apk"
//
//            copy {
//                from fromFile
//                into intoFile
//
//                rename {
//                    appName
//                }
//            }
//
//            println("=====================build.doLast success.=========================")
//        }
//
//    }

}

ext {
    bintrayRepo = 'SolingMedia'
    bintrayName ="media-library"

    libraryName = 'media-library'

    publishedGroupId = "com.soling.media"
    artifact ='media-library'
    libraryVersion = '1.0.0'

    libraryDescription = 'media module owned by soling'
    siteUrl = 'https://github.com/alex8156/SolingMedia'
    gitUrl = 'https://github.com/alex8156/SolingMedia.git'
    developerId = 'soling'
    developerName = 'soling'
    developerEmail = 'yizeng@szsoling.com'
    licenseName = 'The Apache Software License,Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLincenses = ["Apache-2.0"]
}

//publish {
//    repoName = 'SolingMedia'
//    userOrg = 'alex8156'//bintray.com你的用户名
//    groupId = 'com.soling'//jcenter上的路径
//    artifactId = 'media-library'//项目名称
//    publishVersion = '1.0.0'//版本号
//    desc = 'media module owned by soling'//描述，不重要
//    website = 'http://www.szsoling.com/home/'//网站，不重要；尽量模拟github上的地址，例如我这样的；当然你有地址最好了
//    //don't forget to add your custom publication
//}

apply from: 'bintray.gradle'
apply from: 'install.gradle'


